<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--생성한 Mapper 인터페이스와 namespace 속성으로 연결-->
<mapper namespace="DataMapper">
    <insert id="crowlData" parameterType="list">
        INSERT INTO MAP
        (
        categoryGroupCode,
        categoryGroupName,
        categoryName,
        placeName,
        score,
        addressName,
        roadAddressName,
        businessHour,
        phone,
        courseShare,
        x,
        y
        )
        VALUES
        <foreach collection="list" item="item" separator=",">
            (
            #{item.categoryGroupCode, jdbcType=VARCHAR},
            #{item.categoryGroupName, jdbcType=VARCHAR},
            #{item.categoryName, jdbcType=VARCHAR},
            #{item.placeName},
            #{item.score},
            #{item.addressName},
            #{item.roadAddressName, jdbcType=VARCHAR},
            #{item.businessHour, jdbcType=VARCHAR},
            #{item.phone, jdbcType=VARCHAR},
            #{item.courseShare, jdbcType=VARCHAR},
            #{item.x},
            #{item.y}
            )
        </foreach>
    </insert>
    <select id="getAddressDatas" resultType="kakaoMapData">
        SELECT ID
             , CATEGORYGROUPCODE
             , CATEGORYGROUPNAME
             , CATEGORYNAME
             , PLACENAME
             , SCORE
             , ADDRESSNAME
             , ROADADDRESSNAME
             , BUSINESSHOUR
             , PHONE
             , COURSESHARE
             , X
             , Y
        FROM MAP
    </select>

    <update id="updateAddressConversion" parameterType="kakaoMapData">
        UPDATE MAP
        SET X = #{x}
          , Y = #{y}
        WHERE ADDRESSNAME = #{addressName}
          AND ID = #{id}
    </update>

    <select id="searchPinDetail" parameterType="map" resultType="kakaoMapData">
        SELECT ID
             , CATEGORYGROUPCODE
             , CATEGORYGROUPNAME
             , CATEGORYNAME
             , PLACENAME
             , SCORE
             , ADDRESSNAME
             , ROADADDRESSNAME
             , BUSINESSHOUR
             , PHONE
             , COURSESHARE
             , X
             , Y
        FROM MAP
        WHERE 1=1
          AND ID = #{id}
    </select>

    <select id="searchPinDatas" parameterType="map" resultType="kakaoMapData">
        SELECT ID
        , CATEGORYGROUPCODE
        , CATEGORYGROUPNAME
        , CATEGORYNAME
        , PLACENAME
        , SCORE
        , ADDRESSNAME
        , ROADADDRESSNAME
        , BUSINESSHOUR
        , PHONE
        , COURSESHARE
        , X
        , Y
        FROM MAP
        WHERE 1=1
        <if test="searchKewords.category != null and searchKewords.category != ''">
            AND CATEGORYGROUPCODE = #{searchKewords.category}
        </if>
        <if test="searchKewords.keyword != null and searchKewords.keyword != ''">
            AND (
            PLACENAME LIKE CONCAT('%', #{searchKewords.keyword}, '%')
            OR
            ADDRESSNAME LIKE CONCAT('%', #{searchKewords.keyword}, '%')
            )
        </if>
        <if test="searchKewords.keyword2 != null and searchKewords.keyword2 != ''">
            OR (
            PLACENAME LIKE CONCAT('%', #{searchKewords.keyword2}, '%')
            OR
            ADDRESSNAME LIKE CONCAT('%', #{searchKewords.keyword2}, '%')
            )
        </if>
        ORDER BY SCORE DESC
        , X
        LIMIT #{cri.amount} OFFSET #{cri.startNum}
    </select>

    <select id="getPinTotalCnt" parameterType="map" resultType="int">
        SELECT COUNT(*)
        FROM MAP
        WHERE 1=1
        <if test="category != null and category != ''">
            AND CATEGORYGROUPCODE = #{category}
        </if>
        <if test="keyword != null and keyword != ''">
            AND (
            PLACENAME LIKE CONCAT('%', #{keyword}, '%')
            OR
            ADDRESSNAME LIKE CONCAT('%', #{keyword}, '%')
            )
        </if>
        <if test="keyword2 != null and keyword2 != ''">
            OR (
            PLACENAME LIKE CONCAT('%', #{keyword2}, '%')
            OR
            ADDRESSNAME LIKE CONCAT('%', #{keyword2}, '%')
            )
        </if>
    </select>
    
    <update id="mergeData" parameterType="kakaoMapData">
        INSERT INTO MAP(
             categoryGroupCode
           , categoryGroupName
           , categoryName
           , placeName
           , score
           , addressName
           , roadAddressName
           , businessHour
           , phone
           , placeUrl
        ) VALUE (
        <choose>
            <when test="categoryName != null and categoryName != ''">
              (SELECT DISTINCT M.categoryGroupCode FROM MAP M WHERE M.categoryName = REPLACE(#{categoryName, jdbcType=VARCHAR}, '"', ''))
            , (SELECT DISTINCT M.categoryGroupName FROM MAP M WHERE M.categoryName = REPLACE(#{categoryName, jdbcType=VARCHAR}, '"', ''))
            </when>
            <otherwise>
              NULL
            , NULL
            </otherwise>
        </choose>
          , REPLACE(#{categoryName, jdbcType=VARCHAR}, '"', '')
          , #{placeName}
          , #{score}
          , REPLACE(#{addressName}, '"', '')
          ,	#{roadAddressName, jdbcType=VARCHAR}
          , REPLACE(#{businessHour, jdbcType=VARCHAR}, '"', '')
          , #{phone, jdbcType=VARCHAR}
          , #{placeUrl, jdbcType=VARCHAR})
        ON DUPLICATE KEY
        UPDATE categoryName = REPLACE(#{categoryName, jdbcType=VARCHAR}, '"', '')
             , score = #{score}
             , roadAddressName = #{roadAddressName, jdbcType=VARCHAR}
             , businessHour = REPLACE(#{businessHour, jdbcType=VARCHAR}, '"', '')
             , phone = #{phone, jdbcType=VARCHAR}
             , placeUrl = #{placeUrl, jdbcType=VARCHAR}
    </update>

    <update id="mergeReviewData" parameterType="kakaoMapReviewData">
        INSERT INTO MAPREVIEW(
             refMapId
           , placeName
           , addressName
           , roadAddressName
           , userNickName
           , regDate
           , score
           , comment
        ) VALUE (
            (SELECT ID FROM MAP WHERE placeName = #{placeName} and addressName = REPLACE(#{addressName}, '"', '') and roadAddressName = #{roadAddressName, jdbcType=VARCHAR})
           , #{placeName}
           , #{addressName}
           , #{roadAddressName, jdbcType=VARCHAR}
           , #{userNickName}
           , #{regDate}
           , #{score}
           , #{comment, jdbcType=VARCHAR})
        ON DUPLICATE KEY
        UPDATE refMapId = (SELECT ID FROM MAP WHERE placeName = #{placeName} and addressName = REPLACE(#{addressName}, '"', '') and roadAddressName = #{roadAddressName, jdbcType=VARCHAR})
             , score = #{score}
             , roadAddressName = #{roadAddressName, jdbcType=VARCHAR}
             , userNickName = #{userNickName}
             , moddate = now()
    </update>

    <update id="updateForData" parameterType="map">
        UPDATE MAP
           SET ID = #{newId}
         WHERE ID = #{id}
    </update>
</mapper>
